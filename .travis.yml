language: cpp

matrix:
  include:
    - os: linux
      dist: focal 
      env: QT_BASE=515 VER=6.0 STDFLAGS="-std=c++17" BUILD_TYPE=Release STANDARD=17
      compiler: gcc
      addons:
        apt:
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          - sourceline: 'ppa:beineri/opt-qt-5.15.2-focal' 
          packages:
          - qt515base
          - qt515connectivity
          - qt515multimedia
          - qt515svg
          - qt515translations
          - qt515tools
          - qt515webchannel
          - qt515webengine

before_install:
  - if [ "$QT_BASE" = "515" ]; then sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-focal -y; fi
  - sudo apt-get update -qq

install:
  - sudo apt-get install libgl1-mesa-dev
  - if [ "$QT_BASE" = "515" ]; then sudo apt-get install -qq qt515base qt515connectivity qt515multimedia qt515svg qt515translations qt515tools qt515webchannel qt515webengine ; source /opt/qt515/bin/qt515-env.sh ; export QTHOME=/opt/qt515 ; fi

  # cmake
  - curl -o cmake.tar.gz -O https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz
  - mkdir /opt/cmake
  - tar -xf cmake.tar.gz -C /opt/cmake --strip-components=1
  - rm -f cmake.tar.gz
  - export PATH=/opt/cmake/bin:/opt/qt515/bin:${PATH}
  - export CMAKE_PREFIX_PATH=/opt/qt515:${CMAKE_PREFIX_PATH}

before_script:
  - mkdir -p build/appdir/usr
  - cd build
  - cmake --version
  - cmake -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS="-std=c++17" -DENABLE_TESTING=ON -DCMAKE_INSTALL_PREFIX=/usr ..
  - export NUMBER_OF_PROCESSORS=$(nproc --all)

script:
  - make -j$(nproc)
  - make test
  - make DESTDIR=appdir install 
  - cd ..
  - export VERSION=$(git rev-list master --count)
  - cd build
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/5/linuxdeployqt-5-x86_64.AppImage"
  - chmod a+x linuxdeployqt-5-x86_64.AppImage
  - ./linuxdeployqt-5-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage -exclude-libs="libnss3.so,libnssutil3.so"

after_success:
  - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh Viper*.AppImage*

