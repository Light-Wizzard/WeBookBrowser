name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  QT_BASE: 515
  VER: 6.0
  STDFLAGS: "-std=c++17"
  STANDARD: 17
  QTHOME: /opt/qt515
  #  PATH: "/opt/cmake/bin:/opt/qt515/bin:${{env.PATH}}"
  # CMAKE_PREFIX_PATH: "/opt/qt515:${{env.CMAKE_PREFIX_PATH}}"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Setup dependencies
      run: |
        chmod +x "${GITHUB_WORKSPACE}/.github/setup.sh"
        "${GITHUB_WORKSPACE}/.github/setup.sh"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}/build
      run: cmake -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS="-std=c++17" -DENABLE_TESTING=ON -DCMAKE_INSTALL_PREFIX=/usr ..

    - name: Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/build
      run: make -j2

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make test
      
    - name: Install
      working-directory: ${{github.workspace}}/build
      run: make DESTDIR=appdir install
    
    - name: Run LinuxDeployQt
      working-directory: ${{github.workspace}}/build
      run: |
        chmod +x "${GITHUB_WORKSPACE}/.github/deploy.sh"
        ../.github/deploy.sh "${{ secrets.GITHUB_TOKEN }}"

